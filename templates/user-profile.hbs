<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Dashboard</title>
    <link rel="stylesheet" href="home.css">
    <link rel="icon" href="favicon.png" type="image/jpg">
   <style>
        /* Default light mode styles */
        body {
            background-color: #f8f9fa;
            color: #212529;
            font-family: Arial, sans-serif;
            transition: background-color 0.3s, color 0.3s;
        }

        h1, h2, h3, h4, h5, h6, p {
            transition: color 0.3s;
        }

        .sidebar {
            background-color: #ffffff;
            color: #000000;
        }

        .profile-section, .stats-section, .activity-health, .appointments-section {
            background-color: #ffffff;
            color: #000000;
        }

        .buttons-container button {
            background-color: #007bff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s, color 0.3s;
        }

        /* Dark mode styles */
        .dark-mode {
            background-color: #121212;
            color: #ffffff;
        }

        .dark-mode h1, 
        .dark-mode h2, 
        .dark-mode h3, 
        .dark-mode h4, 
        .dark-mode h5, 
        .dark-mode h6, 
        .dark-mode p {
            color: #1e40af;
        }

        .dark-mode .sidebar {
            background-color: #1e1e1e;
            color: #ffffff;
        }
        .dark-mode .profile-card {
            background-color: #1e1e1e;
            color: #ffffff;
        }
         .dark-mode .stat-card {
            background-color: #1e1e1e;
            color: #ffffff;
        }
         .dark-mode .activity-card {
            background-color: #1e1e1e;
            color: #ffffff;
        }
       .dark-mode .main-content {
            background-color: #1e1e1e;
            color: #ffffff;
        }
         .dark-mode .health-condition-card {
            background-color: #1e1e1e;
            color: #ffffff;
        }
       




        .dark-mode .profile-section, 
        .dark-mode .stats-section, 
        .dark-mode .activity-health, 
        .dark-mode .appointments-section {
            background-color: #1e1e1e;
            color: #ffffff;
        }

        .dark-mode .buttons-container button {
            background-color: #333;
            color: #fff;
        }
    </style>
</head>
<body>
    <div class="min-h-screen flex bg-gradient-to-br" id="page-container">
        <div class="sidebar" id="sidebar">
            <div class="sidebar-title">Patient Dashboard</div>
            <ul class="menu-list">
                <li class="menu-item">Overview</li>
                <li class="menu-item">Doctors</li>
                <li class="menu-item">Medical History</li>
                <li class="menu-item">Tests & Analyzes</li>
                <li class="menu-item">Messages</li>
                <li class="menu-item">Departments</li>
            </ul>
            <div class="buttons-container">
                <button class="edit-button" onclick="window.location.href='http://localhost:3001/edit-profile'">Edit</button>
                <button class="logout-button" onclick="window.location.href='http://localhost:3001/login'">Logout</button>
            </div>
            <div class="dark-mode-toggle">
                <label for="dark-mode-switch">Dark Mode</label>
                <input type="checkbox" id="dark-mode-switch">
            </div>
        </div>

        <div class="main-content">
            <div class="profile-section">
                <div class="profile-card">
                    <img src="https://via.placeholder.com/100" alt="Profile" class="profile-img">
                    <h2 class="profile-name">Loading...</h2>
                    <p class="profile-id">Patient ID: Loading...</p>
                    <div class="profile-details">
                        <p>Age: <span id="age">Loading...</span></p>
                        <p>Blood Group: <span id="blood-group">Loading...</span></p>
                        <p>Height: <span id="height">Loading...</span></p>
                        <p>Weight: <span id="weight">Loading...</span></p>
                    </div>
                </div>
                <div class="stats-section">
                    <div class="stat-card">
                        <h3>General Health</h3>
                        <p id="general-health">null %</p>
                    </div>
                    <div class="stat-card">
                        <h3>Water Balance</h3>
                        <p id="water-balance">null %</p>
                    </div>
                </div>
            </div>
            <div class="activity-health">
                <div class="activity-card">
                    <h3>Your Activity</h3>
                    <p>Activity Graph Placeholder</p>
                </div>
                <div class="health-condition-card">
                    <h3>Your Health Conditions</h3>
                    <p>Health Condition Graph Placeholder</p>
                </div>
            </div>
            <div class="appointments-section">
                <h3>Doctor Appointments</h3>
                <div class="appointments-list">
                    <!-- Appointments can be added here -->
                </div>
            </div>
        </div>
    </div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Assume generalHealthValue is fetched from your server or API
       // const generalHealthValue ={data.generalHealth} ; // Replace with actual data (this is just an example)
 const generalHealthValue =56;
        // Calculate remaining health
        const remainingHealth = 100 - generalHealthValue;

        const ctx = document.getElementById('generalHealthChart').getContext('2d');

        // Create the Pie chart
        const generalHealthChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['General Health', 'Remaining Health'],
                datasets: [{
                    label: 'General Health',
                    data: [generalHealthValue, remainingHealth], // Health and remaining health values
                    backgroundColor: ['#4CAF50', '#FF6384'], // Green for health, Red for remaining
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                return tooltipItem.label + ': ' + tooltipItem.raw + '%';
                            }
                        }
                    }
                }
            }
        });
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Assume generalHealthValue is fetched from your server or API
       // const generalHealthValue ={data.generalHealth} ; // Replace with actual data (this is just an example)
 const generalHealthValue =80;
        // Calculate remaining health
        const remainingHealth = 100 - generalHealthValue;

        const ctx = document.getElementById('waterbalance').getContext('2d');

        // Create the Pie chart
        const waterBalance = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['General Health', 'Remaining Health'],
                datasets: [{
                    label: 'General Health',
                    data: [generalHealthValue, remainingHealth], // Health and remaining health values
                    backgroundColor: ['#4CAF50', '#FF6384'], // Green for health, Red for remaining
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                return tooltipItem.label + ': ' + tooltipItem.raw + '%';
                            }
                        }
                    }
                }
            }
        });
    });
</script>

    <script>
       document.addEventListener("DOMContentLoaded", () => {
    const email = localStorage.getItem('userEmail'); // Retrieve email from local storage

            fetch(`/user/${email}`)
                .then(response => response.json())
                .then(data => {
                    if (data) {
                        document.querySelector(".profile-name").textContent = data.name;
                        document.querySelector(".profile-id").textContent = `Patient ID: ${data.patientId || 'N/A'}`;
                        document.getElementById("age").textContent = data.age || 'N/A';
                        document.getElementById("blood-group").textContent = data.bloodGroup || 'N/A';
                        document.getElementById("height").textContent = data.height || 'N/A';
                        document.getElementById("weight").textContent = data.weight || 'N/A';
                        document.getElementById("general-health").textContent = `${data.generalHealth || 'N/A'}%`;
                        document.getElementById("water-balance").textContent = `${data.waterBalance || 'N/A'}%`;
                    }
                })
                .catch(error => console.error('Error fetching user data:', error));

            const darkModeSwitch = document.getElementById('dark-mode-switch');
            const pageContainer = document.getElementById('page-container');

            // Load dark mode preference from localStorage
            if (localStorage.getItem('dark-mode') === 'enabled') {
                pageContainer.classList.add('dark-mode');
                darkModeSwitch.checked = true;
            }

            darkModeSwitch.addEventListener('change', () => {
                if (darkModeSwitch.checked) {
                    pageContainer.classList.add('dark-mode');
                } else {
                    // Even number of clicks: disable dark mode
                    pageContainer.classList.remove('dark-mode');
                }
            });
        });
    </script>
</body>
</html>
